"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const rompot_1 = require("rompot");
const bot = new rompot_1.WhatsAppBot({
    disableAutoCommand: false,
    autoRunBotCommand: true,
    disableAutoRead: true,
    receiveAllMessages: false,
    disableAutoTyping: false,
    auth: "./example/auth",
});
bot.on("open", (open) => {
    if (open.isNewLogin) {
        console.log("Nova conex√£o");
    }
    console.log("Bot conectado!");
});
bot.on("close", () => {
    console.log(`Bot desligado!`);
});
bot.on("qr", (qr) => {
    console.log("QR Gerado:", qr);
});
bot.on("conn", (update) => {
    if (update.action == "connecting") {
        console.log("Tentando conectar bot...");
    }
    if (update.action == "closed") {
        console.log(`A conex√£o desse bot foi fechada`);
    }
    if (update.action == "reconnecting") {
        console.log("Reconectando...");
    }
});
bot.on("message", (message) => __awaiter(void 0, void 0, void 0, function* () {
    console.log(`New message in ${message.chat.id}`);
}));
bot.on("me", (message) => {
    console.log(`Send message to ${message.user.id}`);
});
bot.on("chat", (update) => {
    if (update.action == "add") {
        console.log(`New chat: ${update.chat.id}`);
    }
    if (update.action == "remove") {
        console.log(`Remove chat: ${update.chat.id}`);
    }
});
bot.on("member", (update) => {
    if (update.action == "add") {
        console.log(`Number ${update.member.id} joined group ${update.chat.id}`);
    }
    if (update.action == "remove") {
        console.log(`Member group ${update.chat.id} left`);
    }
    if (update.action == "promote") {
        console.log(`Member (${update.member.id}) promoved!`);
    }
    if (update.action == "demote") {
        console.log(`Member (${update.member.id}) demoted!`);
    }
});
bot.on("error", (err) => {
    console.log("Um erro ocorreu:", err);
});
const hello = new rompot_1.Command("hello", "Manda um simples Hello");
hello.setSend("Hello There!");
const date = new rompot_1.Command(["date", "dt", "data"]);
date.setExecute((message) => {
    const bot = message.getBot();
    bot === null || bot === void 0 ? void 0 : bot.send(new rompot_1.Message(message.chat, `Data: ${new Date()}`));
});
const ban = new rompot_1.Command(["ban", "expulse"]);
ban.setExecute((message) => {
    var _a, _b;
    if (message.chat.type !== "group") {
        return message.reply("Apenas √© poss√≠vel banir membros em grupos");
    }
    if (!((_a = message.chat.getMember(message.user)) === null || _a === void 0 ? void 0 : _a.isAdmin)) {
        return message.reply("Voc·∫Ω n√£o tem permiss√£o para executar esse comando");
    }
    if (!((_b = message.chat.getMember(bot.id)) === null || _b === void 0 ? void 0 : _b.isAdmin)) {
        return message.reply("Eu n√£o tenho permiss√£o para executar esse comando");
    }
    if (message.mentions.length < 1) {
        return message.reply("Voc·∫Ω precisa mencionar alguem para que ela possa ser banida");
    }
    bot.removeMember(message.chat, new rompot_1.User(message.mentions[0] || ""));
});
const add = new rompot_1.Command(["add"]);
add.setExecute((message) => {
    var _a, _b;
    if (message.chat.type !== "group") {
        return message.reply("Apenas √© poss√≠vel adicionar membros em grupos");
    }
    if (!((_a = message.chat.getMember(message.user)) === null || _a === void 0 ? void 0 : _a.isAdmin)) {
        return message.reply("Voc·∫Ω n√£o tem permiss√£o para executar esse comando");
    }
    if (!((_b = message.chat.getMember(bot.id)) === null || _b === void 0 ? void 0 : _b.isAdmin)) {
        return message.reply("Eu n√£o tenho permiss√£o para executar esse comando");
    }
    if (message.mentions.length < 1) {
        return message.reply("Voc·∫Ω precisa mencionar alguem para que ela possa ser adicionada");
    }
    bot.addMember(message.chat, new rompot_1.User(message.mentions[0] || ""));
});
const chat = `{message.chat.id}`;
/* MENU. */
bot.on("message", (message) => {
    console.log(`Mensagem recebida de ${message.user.name}`);
    if (message.text == "P") {
        message.reply("=================== \n" +
            "*1Ô∏è‚É£ B√ÅSICO*\n\n" +
            "*2Ô∏è‚É£ Plus*\n\n" +
            "*3Ô∏è‚É£ Fam√≠lia*\n\n" +
            "```Digite o n√∫mero da op√ß√£o\nPara ter mais informa√ß√µes``` \n");
    }
    else if (message.text == "1") {
        message.reply("-----> B√ÅSICO <-----" + "\n" +
            "    R$ 10,00 " + "\n" +
            "------------------" + "\n" +
            "‚≠ïÔ∏è SERVIDOR BRASILEIROüáßüá∑" + "\n" +
            "‚≠ïÔ∏è LIMITE DE ACESSO 1" + "\n" +
            "‚≠ïÔ∏è CHAMADA VOIP ‚úîÔ∏è" + "\n" +
            "‚≠ïÔ∏è FRANQUIA ILIMITADA‚úîÔ∏è" + "\n" +
            "‚≠ïÔ∏è JOGOS ONLINES‚úîÔ∏è" + "\n" +
            "‚≠ïÔ∏è BANCOS‚úîÔ∏è" + "\n" +
            "‚≠ïÔ∏è STRIMER DE SERES E FILMES FHD‚úîÔ∏è" + "\n" +
            "‚≠ïÔ∏è PROIBIDO Torrentüö´" + "\n");
    }
    else if (message.text == "2") {
        message.reply("-----> PLUS <-----" + "\n" +
            "    R$ 10,00 " + "\n" +
            "------------------" + "\n" +
            "‚≠ïÔ∏è SERVIDOR BRASILEIROüáßüá∑" + "\n" +
            "‚≠ïÔ∏è LIMITE DE ACESSO 1" + "\n" +
            "‚≠ïÔ∏è CHAMADA VOIP ‚úîÔ∏è" + "\n" +
            "‚≠ïÔ∏è FRANQUIA ILIMITADA‚úîÔ∏è" + "\n" +
            "‚≠ïÔ∏è JOGOS ONLINES‚úîÔ∏è" + "\n" +
            "‚≠ïÔ∏è BANCOS‚úîÔ∏è" + "\n" +
            "‚≠ïÔ∏è STRIMER DE SERES E FILMES FHD‚úîÔ∏è" + "\n" +
            "‚≠ïÔ∏è PROIBIDO Torrentüö´" + "\n");
    }
    else if (message.text == "3") {
        message.reply("-----> FAM√çLIA <-----" + "\n" +
            "    R$ 10,00 " + "\n" +
            "------------------" + "\n" +
            "‚≠ïÔ∏è SERVIDOR BRASILEIROüáßüá∑" + "\n" +
            "‚≠ïÔ∏è LIMITE DE ACESSO 1" + "\n" +
            "‚≠ïÔ∏è CHAMADA VOIP ‚úîÔ∏è" + "\n" +
            "‚≠ïÔ∏è FRANQUIA ILIMITADA‚úîÔ∏è" + "\n" +
            "‚≠ïÔ∏è JOGOS ONLINES‚úîÔ∏è" + "\n" +
            "‚≠ïÔ∏è BANCOS‚úîÔ∏è" + "\n" +
            "‚≠ïÔ∏è STRIMER DE SERES E FILMES FHD‚úîÔ∏è" + "\n" +
            "‚≠ïÔ∏è PROIBIDO Torrentüö´" + "\n");
    }
    else if (message.text == "T") {
        message.reply("Aula 1: seu link aqui " + "\n" +
            "Aula 2: seu link aqui " + "\n" +
            "Aula 3: seu link aqui " + "\n" +
            "Aula 4: seu link aqui " + "\n" +
            "Aula 5: seu link aqui " + "\n");
    }
    else if (message.text == "B") {
        message.reply("Play Store: seu link aqui " + "\n" +
            "Dropbox: seu link aqui " + "\n");
    }
    else if (message.text == "S") {
        message.reply("Suporte humano: seu link dou WhatsApp ou telegram" + "\n");
    }
    else {
        message.reply("=================== \n" +
            "*P ‚û°Ô∏è  PLANOS*\n" +
            "*T ‚û°Ô∏è  TUTORIAL*\n" +
            "*B ‚û°Ô∏è  BAIXAR APP*\n" +
            "*S ‚û°Ô∏è  SUPORTE*\n" +
            "\n```Digite a primeira letra```\n" +
            "\n===================");
    }
});
bot.on("me", (message) => {
    console.log(`Mensagem enviada para ${message.chat.id}`);
});
const commands = new rompot_1.Commands({ hello, date, ban, add });
commands.setPrefix("/");
bot.setCommands(commands);
bot.connect();
